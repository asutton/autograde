#!/usr/bin/python

import sys
import os
import os.path

import grading.diagnostic
import grading.dir
import grading.cmake
import grading.make

"""This program performs a number of common operations on a student's
homework assignment, and produces a report of the evaluation.

The usage of autograde is:

    autograde <hw>

where <hw> is the name of the assignment. Note that that the program must
be run from within a student directory.
"""


def summarize(hw, r):
  """Write the diagnostics to an eval file in the current diretory."""
  f = open("eval-{0}.log".format(hw), "w")
  f.write(str(r))
  f.close()

  # Also, print the diagnostics
  print(r)


def build(r):
  """Run all of the build steps from within the project directory."""
  if not grading.cmake.config(r):
    return False

  if not grading.make.all(r):
    return False

  grading.make.test(r)
  grading.make.manifest(r)

def check(hw, r):
  """Initiate the checking of the homework."""
  if not grading.dir.eval(hw, r):
    return

  os.chdir(hw)
  build(r)
  os.chdir("..")

def grade(hw):
  """Check the homework assignment by performing a number of operations
  within the user's directory."""

  # Keep a list of diagnostics for each successive check
  # of the project directory.

  r = grading.diagnostic.Report()
  check(hw, r)
  summarize(hw, r)

def usage():
  """Print usage information."""
  print "usage: autograde <hw>"

def main():
  """Run the main program."""
  if len(sys.argv) < 2:
    usage()
    return

  cwd = os.getcwd() # current workdin directory
  hw = sys.argv[1]   # assignment name

  grade(hw);

if __name__ == "__main__":
  main()

